WeightBrackets <- read_excel("Cleaned up data.xlsx", sheet = "WeightBrackets")
########### Plotting Weight Bracket Boxplots ######################
#Load Weight Bracket Data
WeightBrackets <- read_excel("Cleaned up data.xlsx", sheet = "WeightBrackets")
########### Plotting Weight Bracket Boxplots ######################
#Load Weight Bracket Data
WeightBrackets <- read_excel("Cleaned up data.xlsx", sheet = "WeightBrackets")
require(xlsx)
require(readx1)
points(X)
X = c(0,0)
points(X)
plot.new
points(X)
plot.new(points(X))
?cex
??cex
is.integer(4.5)
is.integer(5)
is.integer(45)
source('~/Documents/CMEECourseWork/Week9/code/vblanch_HPC_2019_main.R', echo=TRUE)
plot(50,50, points(A,B,C))
A = c(0,0)
B = c(3,4)
C = c(4,1)
X = c(0,0)
plot(50,50, points(A,B,C))
#Record species abundance octave vector
abundancemin <- species_abundance(richnessmin)
abundancemax <- species_abundance(richnessmax)
octavesmin <- sum_vect(octavesmin, octaves(abundancemin))
octavesmax <- sum_vect(octavesmax, octaves(abundancemax))
# clear any existing graphs and plot your graph within the R window
graphics.off()
#Run neutral model
richnessmax <- init_community_max(100)
richnessmin <- init_community_min(100)
speciation_rate = 0.1
duration = 200
generations = 2000
averagenumber = 0
for (i in 1:duration) {
richnessmax <- neutral_generation_speciation(richnessmax, speciation_rate)
richnessmin <- neutral_generation_speciation(richnessmin, speciation_rate)
}
#Record species abundance octave vector
abundancemin <- species_abundance(richnessmin)
abundancemax <- species_abundance(richnessmax)
#Record species abundance octave vector
abundancemin <- species_abundance(richnessmin)
abundancemax <- species_abundance(richnessmax)
octavesmin <- octaves(abundancemin)
octavesmax <- octaves(abundancemax)
for (x in 1:generations) {
richnessmax <- neutral_generation_speciation(richnessmax, speciation_rate)
richnessmin <- neutral_generation_speciation(richnessmin, speciation_rate)
if (x%%20 == 0) {
averagenumber = averagenumber+1
abundancemin <- species_abundance(richnessmin)
abundancemax <- species_abundance(richnessmax)
octavesmin <- sum_vect(octavesmin, octaves(abundancemin))
octavesmax <- sum_vect(octavesmax, octaves(abundancemax))
}
}
# Calculate average octaves
averagemaxoctaves <- octavesmax/averagenumber
if (x%%20 == 0) {
averagenumber = averagenumber+1
abundancemin <- species_abundance(richnessmin)
abundancemax <- species_abundance(richnessmax)
minimumoctave <- octaves(abundancemin)
octavesmin <- sum_vect(octavesmin, minimumoctave)
octavesmax <- sum_vect(octavesmax, octaves(abundancemax))
}
for (x in 1:generations) {
richnessmax <- neutral_generation_speciation(richnessmax, speciation_rate)
richnessmin <- neutral_generation_speciation(richnessmin, speciation_rate)
if (x%%20 == 0) {
averagenumber = averagenumber+1
abundancemin <- species_abundance(richnessmin)
abundancemax <- species_abundance(richnessmax)
minimumoctave <- octaves(abundancemin)
octavesmin <- sum_vect(octavesmin, minimumoctave)
octavesmax <- sum_vect(octavesmax, octaves(abundancemax))
}
}
for (x in 1:generations) {
richnessmax <- neutral_generation_speciation(richnessmax, speciation_rate)
richnessmin <- neutral_generation_speciation(richnessmin, speciation_rate)
if (x%%20 == 0) {
averagenumber = averagenumber+1
abundancemin <- species_abundance(richnessmin)
abundancemax <- species_abundance(richnessmax)
minimumoctave <- octaves(abundancemin)
maximumoctave <- octaves(abundancemax)
octavesmin <- sum_vect(octavesmin, minimumoctave)
octavesmax <- sum_vect(octavesmax, maximumoctave)
}
}
for (x in 1:generations) {
richnessmax <- neutral_generation_speciation(richnessmax, speciation_rate)
richnessmin <- neutral_generation_speciation(richnessmin, speciation_rate)
if (x%%20 == 0) {
averagenumber = averagenumber+1
abundancemin <- species_abundance(richnessmin)
abundancemax <- species_abundance(richnessmax)
minimumoctave <- octaves(abundancemin)
maximumoctave <- octaves(abundancemax)
octavesmin <- sum_vect(octavesmin, minimumoctave)
octavesmax <- sum_vect(octavesmax, maximumoctave)
}
}
for (x in 1:20) {
richnessmax <- neutral_generation_speciation(richnessmax, speciation_rate)
richnessmin <- neutral_generation_speciation(richnessmin, speciation_rate)
if (x%%20 == 0) {
averagenumber = averagenumber+1
abundancemin <- species_abundance(richnessmin)
abundancemax <- species_abundance(richnessmax)
minimumoctave <- octaves(abundancemin)
maximumoctave <- octaves(abundancemax)
octavesmin <- sum_vect(octavesmin, minimumoctave)
octavesmax <- sum_vect(octavesmax, maximumoctave)
}
}
for (x in 1:20) {
richnessmax <- neutral_generation_speciation(richnessmax, speciation_rate)
richnessmin <- neutral_generation_speciation(richnessmin, speciation_rate)
if (x%%20 == 0) {
averagenumber = averagenumber+1
abundancemin <- species_abundance(richnessmin)
abundancemax <- species_abundance(richnessmax)
minimumoctave <- octaves(abundancemin)
maximumoctave <- octaves(abundancemax)
octavesmin <- sum_vect(octavesmin, minimumoctave)
octavesmax <- sum_vect(octavesmax, maximumoctave)
}
}
for (x in 1:generations) {
richnessmax <- neutral_generation_speciation(richnessmax, speciation_rate)
richnessmin <- neutral_generation_speciation(richnessmin, speciation_rate)
if (x%%20 == 0) {
averagenumber = averagenumber+1
abundancemin <- species_abundance(richnessmin)
abundancemax <- species_abundance(richnessmax)
minimumoctave <- octaves(abundancemin)
maximumoctave <- octaves(abundancemax)
octavesmin <- sum_vect(octavesmin, minimumoctave)
octavesmax <- sum_vect(octavesmax, maximumoctave)
}
}
for (x in 1:generations) {
richnessmax <- neutral_generation_speciation(richnessmax, speciation_rate)
richnessmin <- neutral_generation_speciation(richnessmin, speciation_rate)
if (x%%20 == 0) {
averagenumber = averagenumber+1
abundancemin <- species_abundance(richnessmin)
abundancemax <- species_abundance(richnessmax)
minimumoctave <- sum_vect(octavesmin, octaves(abundancemin))
maximumoctave <- sum_vect(octavesmax, octaves(abundancemax))
}
}
octavesmin <- sum_vect(octavesmin, octaves(abundancemin))
octavesmin <- octaves(abundancemin)
abundancemin <- species_abundance(richnessmin)
octavesmin <- sum_vect(octavesmin, octaves(abundancemin))
octavesmin
averagenumber = averagenumber+1
abundancemin <- species_abundance(richnessmin)
abundancemax <- species_abundance(richnessmax)
octavesmin <- sum_vect(octavesmin, octaves(abundancemin))
octavesmax <- sum_vect(octavesmax, octaves(abundancemax))
abundancemax <- species_abundance(richnessmax)
octavesmax <- sum_vect(octavesmax, octaves(abundancemax))
for (x in 1:generations) {
richnessmax <- neutral_generation_speciation(richnessmax, speciation_rate)
richnessmin <- neutral_generation_speciation(richnessmin, speciation_rate)
if (x%%20 == 0) {
averagenumber = averagenumber+1
abundancemin <- species_abundance(richnessmin)
abundancemax <- species_abundance(richnessmax)
octavesmin <- sum_vect(octavesmin, octaves(abundancemin))
#octavesmax <- sum_vect(octavesmax, octaves(abundancemax))
}
}
sum_vect <- function(x, y) {
diff <- length(x)-length(y)
if (diff > 0) {
y <- c(y, rep(0, abs(diff))) }
if (diff < 0) {
x <- c(x, rep(0, abs(diff))) }
vector_sum <- x + y
return(vector_sum)
}
#Run neutral model
richnessmax <- init_community_max(100)
richnessmin <- init_community_min(100)
speciation_rate = 0.1
duration = 200
generations = 2000
averagenumber = 0
for (i in 1:duration) {
richnessmax <- neutral_generation_speciation(richnessmax, speciation_rate)
richnessmin <- neutral_generation_speciation(richnessmin, speciation_rate)
}
#Record species abundance octave vector
abundancemin <- species_abundance(richnessmin)
abundancemax <- species_abundance(richnessmax)
octavesmin <- octaves(abundancemin)
octavesmax <- octaves(abundancemax)
for (x in 1:generations) {
richnessmax <- neutral_generation_speciation(richnessmax, speciation_rate)
richnessmin <- neutral_generation_speciation(richnessmin, speciation_rate)
if (x%%20 == 0) {
averagenumber = averagenumber+1
abundancemin <- species_abundance(richnessmin)
abundancemax <- species_abundance(richnessmax)
octavesmin <- sum_vect(octavesmin, octaves(abundancemin))
#octavesmax <- sum_vect(octavesmax, octaves(abundancemax))
}
}
# Calculate average octaves
averagemaxoctaves <- octavesmax/averagenumber
averageminoctaves <- octavesmin/averagenumber
barplot(octavesmax,generations)
barplot(octavesmin,generations)
barplot(averagemaxoctaves,generations)
barplot(averageminoctaves,generations)
# Question 16
question_16 <- function()  {
# clear any existing graphs and plot your graph within the R window
graphics.off()
#Run neutral model
richnessmax <- init_community_max(100)
richnessmin <- init_community_min(100)
speciation_rate = 0.1
duration = 200
generations = 2000
averagenumber = 0
for (i in 1:duration) {
richnessmax <- neutral_generation_speciation(richnessmax, speciation_rate)
richnessmin <- neutral_generation_speciation(richnessmin, speciation_rate)
}
#Record species abundance octave vector
abundancemin <- species_abundance(richnessmin)
abundancemax <- species_abundance(richnessmax)
octavesmin <- octaves(abundancemin)
octavesmax <- octaves(abundancemax)
for (x in 1:generations) {
richnessmax <- neutral_generation_speciation(richnessmax, speciation_rate)
richnessmin <- neutral_generation_speciation(richnessmin, speciation_rate)
if (x%%20 == 0) {
averagenumber = averagenumber+1
abundancemin <- species_abundance(richnessmin)
abundancemax <- species_abundance(richnessmax)
octavesmin <- sum_vect(octavesmin, octaves(abundancemin))
#octavesmax <- sum_vect(octavesmax, octaves(abundancemax))
}
}
# Calculate average octaves
averagemaxoctaves <- octavesmax/averagenumber
averageminoctaves <- octavesmin/averagenumber
barplot(averagemaxoctaves,generations)
barplot(averageminoctaves,generations)
}
# Question 17
cluster_run <- function(speciation_rate, size, wall_time, interval_rich, interval_oct, burn_in_generations, output_file_name)  {
}
barplot(averagemaxoctaves,generations)
# clear any existing graphs and plot your graph within the R window
graphics.off()
#Run neutral model
richnessmax <- init_community_max(100)
richnessmin <- init_community_min(100)
speciation_rate = 0.1
duration = 200
generations = 2000
averagenumber = 0
for (i in 1:duration) {
richnessmax <- neutral_generation_speciation(richnessmax, speciation_rate)
richnessmin <- neutral_generation_speciation(richnessmin, speciation_rate)
}
#Record species abundance octave vector
abundancemin <- species_abundance(richnessmin)
abundancemax <- species_abundance(richnessmax)
octavesmin <- octaves(abundancemin)
octavesmax <- octaves(abundancemax)
for (x in 1:generations) {
richnessmax <- neutral_generation_speciation(richnessmax, speciation_rate)
richnessmin <- neutral_generation_speciation(richnessmin, speciation_rate)
if (x%%20 == 0) {
averagenumber = averagenumber+1
abundancemin <- species_abundance(richnessmin)
abundancemax <- species_abundance(richnessmax)
octavesmin <- sum_vect(octavesmin, octaves(abundancemin))
#octavesmax <- sum_vect(octavesmax, octaves(abundancemax))
}
}
# Calculate average octaves
averagemaxoctaves <- octavesmax/averagenumber
averageminoctaves <- octavesmin/averagenumber
barplot(averagemaxoctaves,generations)
# Question 16
question_16 <- function()  {
# clear any existing graphs and plot your graph within the R window
graphics.off()
#Run neutral model
richnessmax <- init_community_max(100)
richnessmin <- init_community_min(100)
speciation_rate = 0.1
duration = 200
generations = 2000
averagenumber = 0
for (i in 1:duration) {
richnessmax <- neutral_generation_speciation(richnessmax, speciation_rate)
richnessmin <- neutral_generation_speciation(richnessmin, speciation_rate)
}
#Record species abundance octave vector
abundancemin <- species_abundance(richnessmin)
abundancemax <- species_abundance(richnessmax)
octavesmin <- octaves(abundancemin)
octavesmax <- octaves(abundancemax)
for (x in 1:generations) {
richnessmax <- neutral_generation_speciation(richnessmax, speciation_rate)
richnessmin <- neutral_generation_speciation(richnessmin, speciation_rate)
if (x%%20 == 0) {
averagenumber = averagenumber+1
abundancemin <- species_abundance(richnessmin)
abundancemax <- species_abundance(richnessmax)
octavesmin <- sum_vect(octavesmin, octaves(abundancemin))
#octavesmax <- sum_vect(octavesmax, octaves(abundancemax))
}
}
# Calculate average octaves
averagemaxoctaves <- octavesmax/averagenumber
averageminoctaves <- octavesmin/averagenumber
barplot(averagemaxoctaves,generations)
barplot(averageminoctaves,generations)
}
question_16
question_16
par(2,2)
barplot(averagemaxoctaves,generations)
barplot(averageminoctaves,generations)
par(mfrow=c(1,2))
barplot(averagemaxoctaves,generations)
barplot(averageminoctaves,generations)
# clear any existing graphs and plot your graph within the R window
graphics.off()
#Run neutral model
richnessmax <- init_community_max(100)
richnessmin <- init_community_min(100)
speciation_rate = 0.1
duration = 200
generations = 2000
averagenumber = 0
for (i in 1:duration) {
richnessmax <- neutral_generation_speciation(richnessmax, speciation_rate)
richnessmin <- neutral_generation_speciation(richnessmin, speciation_rate)
}
#Record species abundance octave vector
abundancemin <- species_abundance(richnessmin)
abundancemax <- species_abundance(richnessmax)
octavesmin <- octaves(abundancemin)
octavesmax <- octaves(abundancemax)
for (x in 1:generations) {
richnessmax <- neutral_generation_speciation(richnessmax, speciation_rate)
richnessmin <- neutral_generation_speciation(richnessmin, speciation_rate)
if (x%%20 == 0) {
averagenumber = averagenumber+1
abundancemin <- species_abundance(richnessmin)
abundancemax <- species_abundance(richnessmax)
octavesmin <- sum_vect(octavesmin, octaves(abundancemin))
#octavesmax <- sum_vect(octavesmax, octaves(abundancemax))
}
}
# Calculate average octaves
averagemaxoctaves <- octavesmax/averagenumber
averageminoctaves <- octavesmin/averagenumber
par(mfrow=c(1,2))
barplot(averagemaxoctaves,generations)
barplot(averageminoctaves,generations)
# Question 16
question_16 <- function()  {
# clear any existing graphs and plot your graph within the R window
graphics.off()
#Run neutral model
richnessmax <- init_community_max(100)
richnessmin <- init_community_min(100)
speciation_rate = 0.1
duration = 200
generations = 2000
averagenumber = 0
for (i in 1:duration) {
richnessmax <- neutral_generation_speciation(richnessmax, speciation_rate)
richnessmin <- neutral_generation_speciation(richnessmin, speciation_rate)
}
#Record species abundance octave vector
abundancemin <- species_abundance(richnessmin)
abundancemax <- species_abundance(richnessmax)
octavesmin <- octaves(abundancemin)
octavesmax <- octaves(abundancemax)
for (x in 1:generations) {
richnessmax <- neutral_generation_speciation(richnessmax, speciation_rate)
richnessmin <- neutral_generation_speciation(richnessmin, speciation_rate)
if (x%%20 == 0) {
averagenumber = averagenumber+1
abundancemin <- species_abundance(richnessmin)
abundancemax <- species_abundance(richnessmax)
octavesmin <- sum_vect(octavesmin, octaves(abundancemin))
octavesmax <- sum_vect(octavesmax, octaves(abundancemax))
}
}
# Calculate average octaves
averagemaxoctaves <- octavesmax/averagenumber
averageminoctaves <- octavesmin/averagenumber
par(mfrow=c(1,2))
barplot(averagemaxoctaves,generations)
barplot(averageminoctaves,generations)
}
question_16()
# Question 16
question_16 <- function()  {
# clear any existing graphs and plot your graph within the R window
graphics.off()
#Run neutral model
richnessmax <- init_community_max(100)
richnessmin <- init_community_min(100)
speciation_rate = 0.1
duration = 200
generations = 2000
averagenumber = 0
for (i in 1:duration) {
richnessmax <- neutral_generation_speciation(richnessmax, speciation_rate)
richnessmin <- neutral_generation_speciation(richnessmin, speciation_rate)
}
#Record species abundance octave vector
abundancemin <- species_abundance(richnessmin)
abundancemax <- species_abundance(richnessmax)
octavesmin <- octaves(abundancemin)
octavesmax <- octaves(abundancemax)
for (x in 1:generations) {
richnessmax <- neutral_generation_speciation(richnessmax, speciation_rate)
richnessmin <- neutral_generation_speciation(richnessmin, speciation_rate)
if (x%%20 == 0) {
averagenumber = averagenumber+1
abundancemin <- species_abundance(richnessmin)
abundancemax <- species_abundance(richnessmax)
octavesmin <- sum_vect(octavesmin, octaves(abundancemin))
octavesmax <- sum_vect(octavesmax, octaves(abundancemax))
}
}
# Calculate average octaves
averagemaxoctaves <- octavesmax/averagenumber
averageminoctaves <- octavesmin/averagenumber
par(mfrow=c(1,2))
barplot(averagemaxoctaves,generations)
barplot(averageminoctaves,generations
)
question_16()
quit()
# Question 30
fern2 <- function(start_position, direction, length)  {
#Plot first line
endposition1 <- turtle(start_position, direction, length)
#Plot subsequent lines
while (length > 1) {
#Choose left or right
direction <- sample(1:2, 1)
if (direction == 1) {
fern(endposition1, direction - (pi / 4), 0.38*length)
fern(endposition1, direction, 0.87*length)
}
else {
fern(endposition1, direction, 0.87*length)
fern(endposition1, direction + (pi / 4), 0.38*length)
}
}
}
draw_fern2 <- function()  {
# clear any existing graphs and plot your graph within the R window
graphics.off()
plot(1, type = "n", xlab="", ylab="", xlim = c(0,50), ylim= c(0,120))
fern2(start_position = c(25,0), direction = (pi / 2), length = 15)
}
draw_fern2()
# Question 30
fern2 <- function(start_position, direction, length)  {
#Plot first line
endposition1 <- turtle(start_position, direction, length)
#Plot subsequent lines
while (length > 10) {
#Choose left or right
direction <- sample(1:2, 1)
if (direction == 1) {
fern(endposition1, direction - (pi / 4), 0.38*length)
fern(endposition1, direction, 0.87*length)
}
else {
fern(endposition1, direction, 0.87*length)
fern(endposition1, direction + (pi / 4), 0.38*length)
}
}
}
draw_fern2 <- function()  {
# clear any existing graphs and plot your graph within the R window
graphics.off()
plot(1, type = "n", xlab="", ylab="", xlim = c(0,50), ylim= c(0,120))
fern2(start_position = c(25,0), direction = (pi / 2), length = 15)
}
draw_fern()
source('~/Documents/CMEECourseWork/MiniProject/code/NLLS_Fitting_Script3.R', echo=TRUE)
