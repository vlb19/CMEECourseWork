{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 335,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Some imports to explore the datasets\n",
    "import csv\n",
    "import matplotlib\n",
    "import numpy as np\n",
    "import pandas as pd\n",
    "import seaborn as sns\n",
    "import scipy.stats as stats\n",
    "import researchpy as rp\n",
    "import statsmodels.api as sm\n",
    "from statsmodels.formula.api import ols\n",
    "import pingouin as pg    \n",
    "import matplotlib.pyplot as plt\n",
    "import matplotlib.axes as ax\n",
    "from matplotlib.patches import Polygon"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Does habitat influence model fit?"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 336,
   "metadata": {},
   "outputs": [],
   "source": [
    "graphdata = pd.read_csv(\"../data/OptimisedFitSummary.csv\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 337,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Loaded 17 columns.\n",
      "['Unnamed: 0' 'ID' 'a_value' 'h_value' 'q_value' 'BestModelAIC' 'BestAIC'\n",
      " 'BestModelBIC' 'BestBIC' 'ResDensity' 'N_TraitValue' 'Habitat'\n",
      " 'Res_MovementDimensionality' 'Con_MovementDimensionality' 'ConTaxa'\n",
      " 'ResTaxa' 'MecOrPhen']\n"
     ]
    }
   ],
   "source": [
    "# Print number of columns loaded\n",
    "print(\"Loaded {} columns.\".format(len(graphdata.columns.values)))\n",
    "\n",
    "# Print column headings\n",
    "print(graphdata.columns.values)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 338,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Habitat       Freshwater  Marine  Terrestrial\n",
      "BestModelAIC                                 \n",
      "CubFit                49      12           15\n",
      "GenFit                10       1            7\n",
      "HolFit                35      11           14\n",
      "QuaFit                39      12            9\n"
     ]
    }
   ],
   "source": [
    "HabitatCrosstab = pd.crosstab(graphdata['BestModelAIC'], graphdata['Habitat'], margins = False)\n",
    "print(HabitatCrosstab)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 511,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "iVBORw0KGgoAAAANSUhEUgAAAPMAAABKCAYAAABuM2KCAAAABHNCSVQICAgIfAhkiAAAAAlwSFlzAAALEgAACxIB0t1+/AAAADh0RVh0U29mdHdhcmUAbWF0cGxvdGxpYiB2ZXJzaW9uMy4xLjMsIGh0dHA6Ly9tYXRwbG90bGliLm9yZy+AADFEAAACY0lEQVR4nO3Zz0pUYRyH8ccZaSPChBAJgSDBexXSLrqZojuw7sBlu7yMNlGQOxetXyIIEYpIGhcKSdO0EobTeAKdw3G+PJ/V4fcy8HsXD/NvZTqdImn5DfpeQNJiGLMUwpilEMYshVhtOyyljIBRY3wH2AY+AZOO9pL0ryGwCRzWWn81D1tjBp4Du11sJenadoCD5vB/Me8B+43ZFvB+/ck6g7XhYla7ZZ49ftr3Cp0aXDzse4VOvXrzse8VOjE5P+XHu9cAX+edt8Zcax0D49lZKQWAwdqQ4XpmzBv3NvpeoVODi/t9r9Cp1bW7fa/Qtblfb/0BTAphzFIIY5ZCGLMUwpilEMYshTBmKYQxSyGMWQphzFIIY5ZCGLMUwpilEMYshTBmKYQxSyGMWQphzFIIY5ZCGLMUwpilEMYshTBmKYQxSyGMWQphzFIIY5ZCGLMUwpilEMYshTBmKYQxSyGMWQphzFIIY5ZCGLMUwpilEMYshTBmKYQxSyGMWQphzFIIY5ZCGLMUwpilEMYshTBmKYQxSyGMWQphzFIIY5ZCrLYdllJGwKgx3gL4czbpaqfenXw/6XuFTg0uvvW9Qqd+n/3se4VOTM5PLx+H885XptPplS8upbwAdhe+laSb2Km1HjSHre/MwB6w35htA2+BR8DRQla7XR4AH4Ad4LjnXbrg/ZbXENgEDucdtsZcax0D49lZKeXy8ajW+uXm+90uM/c79n7LJ/1+wOerDvwBTAphzFIIY5ZCXCfmMfCSxnfpIN5vuaXf70qtf01JWh5+zJZCGLMUwpilEMYshTBmKcRfyOll8cfJW5EAAAAASUVORK5CYII=\n",
      "text/plain": [
       "<Figure size 288x72 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.palplot(sns.diverging_palette(128, 240, n=4))\n",
    "custompalette = sns.diverging_palette(128, 240, n=4)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 529,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Set dimensions of figure\n",
    "plt.figure(num=None, figsize=(8,6), dpi = 80, facecolor = 'w', edgecolor = 'w')\n",
    "\n",
    "# Create boxplot of best AIC value per model per habitat\n",
    "bp = sns.boxplot(y = 'BestAIC', x = 'Habitat', data = graphdata, palette = custompalette, hue = \"BestModelAIC\")\n",
    "handles, labels = bp.get_legend_handles_labels()\n",
    "\n",
    "# Give the y label a more descriptive value\n",
    "plt.ylabel(\"Minimum AIC Value\")\n",
    "\n",
    "# Create a legend for the different models \n",
    "plt.legend(loc = 'upper right')\n",
    "\n",
    "# Save the figure to the results folder\n",
    "plt.savefig('../results/HabitatCompare')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 513,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<Figure size 1600x800 with 0 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 439.8x360 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Set dimensions of figure\n",
    "plt.figure(num=None, figsize=(20,10), dpi = 80, facecolor = 'w', edgecolor = 'w')\n",
    "\n",
    "# Create boxplot of best AIC value per model per habitat\n",
    "bp = sns.catplot(y = 'BestAIC', x = 'Habitat', data = graphdata, palette = custompalette, hue = \"BestModelAIC\", kind = \"violin\")\n",
    "\n",
    "# Give the y label a more descriptive value\n",
    "plt.ylabel(\"Minimum AIC Value\")\n",
    "\n",
    "# Save the figure to the results folder\n",
    "plt.savefig('../results/HabitatCompareViolin')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Phenomenological or mechanistic models fit better?"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 341,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "MecOrPhen    Mechanistic  Phenomenological\n",
      "Habitat                                   \n",
      "Freshwater            45                88\n",
      "Marine                12                24\n",
      "Terrestrial           21                24\n"
     ]
    }
   ],
   "source": [
    "Habitatcrosstab = pd.crosstab(graphdata['Habitat'], graphdata['MecOrPhen'], margins = False)\n",
    "print(Habitatcrosstab)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 533,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 560x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Set dimensions of figure\n",
    "plt.figure(num=None, figsize=(7,6), dpi = 80, facecolor = 'w', edgecolor = 'w')\n",
    "\n",
    "# Plot bar chart\n",
    "MecOrPhen = sns.countplot(x = 'Habitat', hue = 'MecOrPhen', data = graphdata)\n",
    "\n",
    "# Give the y label a more descriptive value\n",
    "plt.ylabel(\"Frequency of best model selected\")\n",
    "\n",
    "# Save the figure to the results folder\n",
    "plt.savefig('../results/PhenOrMec')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## ANOVA for habitat influence on model selection"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 375,
   "metadata": {},
   "outputs": [],
   "source": [
    "analysisdata = pd.read_csv('../data/AnalysisTable.csv')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 376,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Loaded 8 columns.\n",
      "['Unnamed: 0' 'ID.' 'Habitat' 'ResDimension' 'ConDimension' 'Model' 'AIC'\n",
      " 'BIC']\n"
     ]
    }
   ],
   "source": [
    "# Print number of columns loaded\n",
    "print(\"Loaded {} columns.\".format(len(analysisdata.columns.values)))\n",
    "\n",
    "# Print column headings\n",
    "print(analysisdata.columns.values)\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### HABITAT ANALYSIS"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 377,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Unnamed: 0</th>\n",
       "      <th>ID.</th>\n",
       "      <th>Habitat</th>\n",
       "      <th>ResDimension</th>\n",
       "      <th>ConDimension</th>\n",
       "      <th>Model</th>\n",
       "      <th>AIC</th>\n",
       "      <th>BIC</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>2</td>\n",
       "      <td>39835</td>\n",
       "      <td>Freshwater</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>HolFit</td>\n",
       "      <td>-100.716731</td>\n",
       "      <td>-100.398965</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>3</td>\n",
       "      <td>39835</td>\n",
       "      <td>Freshwater</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>QuaFit</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>4</td>\n",
       "      <td>39835</td>\n",
       "      <td>Freshwater</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>GenFit</td>\n",
       "      <td>-100.320091</td>\n",
       "      <td>-100.081767</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>5</td>\n",
       "      <td>39835</td>\n",
       "      <td>Freshwater</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>CubFit</td>\n",
       "      <td>-98.083590</td>\n",
       "      <td>-97.845266</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>6</td>\n",
       "      <td>39836</td>\n",
       "      <td>Freshwater</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>HolFit</td>\n",
       "      <td>-180.428103</td>\n",
       "      <td>-179.217762</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   Unnamed: 0    ID.     Habitat  ResDimension  ConDimension   Model  \\\n",
       "0           2  39835  Freshwater             2             2  HolFit   \n",
       "1           3  39835  Freshwater             2             2  QuaFit   \n",
       "2           4  39835  Freshwater             2             2  GenFit   \n",
       "3           5  39835  Freshwater             2             2  CubFit   \n",
       "4           6  39836  Freshwater             1             1  HolFit   \n",
       "\n",
       "          AIC         BIC  \n",
       "0 -100.716731 -100.398965  \n",
       "1         NaN         NaN  \n",
       "2 -100.320091 -100.081767  \n",
       "3  -98.083590  -97.845266  \n",
       "4 -180.428103 -179.217762  "
      ]
     },
     "execution_count": 377,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "analysisdata.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 390,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Source</th>\n",
       "      <th>SS</th>\n",
       "      <th>DF</th>\n",
       "      <th>MS</th>\n",
       "      <th>F</th>\n",
       "      <th>p-unc</th>\n",
       "      <th>np2</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Habitat</td>\n",
       "      <td>4.316145e+06</td>\n",
       "      <td>2.0</td>\n",
       "      <td>2158072.263</td>\n",
       "      <td>28.308</td>\n",
       "      <td>1.266867e-12</td>\n",
       "      <td>0.063</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Model</td>\n",
       "      <td>7.448820e+04</td>\n",
       "      <td>3.0</td>\n",
       "      <td>24829.399</td>\n",
       "      <td>0.326</td>\n",
       "      <td>8.067974e-01</td>\n",
       "      <td>0.001</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Habitat * Model</td>\n",
       "      <td>4.296512e+04</td>\n",
       "      <td>6.0</td>\n",
       "      <td>7160.854</td>\n",
       "      <td>0.094</td>\n",
       "      <td>9.969594e-01</td>\n",
       "      <td>0.001</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Residual</td>\n",
       "      <td>6.403861e+07</td>\n",
       "      <td>840.0</td>\n",
       "      <td>76236.441</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "            Source            SS     DF           MS       F         p-unc  \\\n",
       "0          Habitat  4.316145e+06    2.0  2158072.263  28.308  1.266867e-12   \n",
       "1            Model  7.448820e+04    3.0    24829.399   0.326  8.067974e-01   \n",
       "2  Habitat * Model  4.296512e+04    6.0     7160.854   0.094  9.969594e-01   \n",
       "3         Residual  6.403861e+07  840.0    76236.441     NaN           NaN   \n",
       "\n",
       "     np2  \n",
       "0  0.063  \n",
       "1  0.001  \n",
       "2  0.001  \n",
       "3    NaN  "
      ]
     },
     "execution_count": 390,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "HabitatANOVA = pg.anova(dv='AIC', between=['Habitat','Model'], data = analysisdata, detailed = True)\n",
    "HabitatANOVA"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 391,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>A</th>\n",
       "      <th>B</th>\n",
       "      <th>mean(A)</th>\n",
       "      <th>mean(B)</th>\n",
       "      <th>diff</th>\n",
       "      <th>se</th>\n",
       "      <th>tail</th>\n",
       "      <th>T</th>\n",
       "      <th>p-tukey</th>\n",
       "      <th>hedges</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Freshwater</td>\n",
       "      <td>Marine</td>\n",
       "      <td>-99.931</td>\n",
       "      <td>-180.968</td>\n",
       "      <td>81.037</td>\n",
       "      <td>25.909</td>\n",
       "      <td>two-sided</td>\n",
       "      <td>3.128</td>\n",
       "      <td>0.005038</td>\n",
       "      <td>0.294</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Freshwater</td>\n",
       "      <td>Terrestrial</td>\n",
       "      <td>-99.931</td>\n",
       "      <td>-275.943</td>\n",
       "      <td>176.012</td>\n",
       "      <td>23.721</td>\n",
       "      <td>two-sided</td>\n",
       "      <td>7.420</td>\n",
       "      <td>0.001000</td>\n",
       "      <td>0.640</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Marine</td>\n",
       "      <td>Terrestrial</td>\n",
       "      <td>-180.968</td>\n",
       "      <td>-275.943</td>\n",
       "      <td>94.975</td>\n",
       "      <td>30.794</td>\n",
       "      <td>two-sided</td>\n",
       "      <td>3.084</td>\n",
       "      <td>0.005816</td>\n",
       "      <td>0.345</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "            A            B  mean(A)  mean(B)     diff      se       tail  \\\n",
       "0  Freshwater       Marine  -99.931 -180.968   81.037  25.909  two-sided   \n",
       "1  Freshwater  Terrestrial  -99.931 -275.943  176.012  23.721  two-sided   \n",
       "2      Marine  Terrestrial -180.968 -275.943   94.975  30.794  two-sided   \n",
       "\n",
       "       T   p-tukey  hedges  \n",
       "0  3.128  0.005038   0.294  \n",
       "1  7.420  0.001000   0.640  \n",
       "2  3.084  0.005816   0.345  "
      ]
     },
     "execution_count": 391,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "Habitattukey = pg.pairwise_tukey(data = analysisdata, dv = 'AIC', between=['Habitat'])\n",
    "Habitattukey"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 392,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>A</th>\n",
       "      <th>B</th>\n",
       "      <th>mean(A)</th>\n",
       "      <th>mean(B)</th>\n",
       "      <th>diff</th>\n",
       "      <th>se</th>\n",
       "      <th>tail</th>\n",
       "      <th>T</th>\n",
       "      <th>p-tukey</th>\n",
       "      <th>hedges</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>CubFit</td>\n",
       "      <td>GenFit</td>\n",
       "      <td>-135.338</td>\n",
       "      <td>-150.694</td>\n",
       "      <td>15.356</td>\n",
       "      <td>27.552</td>\n",
       "      <td>two-sided</td>\n",
       "      <td>0.557</td>\n",
       "      <td>0.900000</td>\n",
       "      <td>0.054</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>CubFit</td>\n",
       "      <td>HolFit</td>\n",
       "      <td>-135.338</td>\n",
       "      <td>-157.150</td>\n",
       "      <td>21.812</td>\n",
       "      <td>27.488</td>\n",
       "      <td>two-sided</td>\n",
       "      <td>0.794</td>\n",
       "      <td>0.877933</td>\n",
       "      <td>0.077</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>CubFit</td>\n",
       "      <td>QuaFit</td>\n",
       "      <td>-135.338</td>\n",
       "      <td>-159.661</td>\n",
       "      <td>24.324</td>\n",
       "      <td>27.520</td>\n",
       "      <td>two-sided</td>\n",
       "      <td>0.884</td>\n",
       "      <td>0.858166</td>\n",
       "      <td>0.085</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>GenFit</td>\n",
       "      <td>HolFit</td>\n",
       "      <td>-150.694</td>\n",
       "      <td>-157.150</td>\n",
       "      <td>6.456</td>\n",
       "      <td>27.520</td>\n",
       "      <td>two-sided</td>\n",
       "      <td>0.235</td>\n",
       "      <td>0.900000</td>\n",
       "      <td>0.023</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>GenFit</td>\n",
       "      <td>QuaFit</td>\n",
       "      <td>-150.694</td>\n",
       "      <td>-159.661</td>\n",
       "      <td>8.967</td>\n",
       "      <td>27.552</td>\n",
       "      <td>two-sided</td>\n",
       "      <td>0.325</td>\n",
       "      <td>0.900000</td>\n",
       "      <td>0.032</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>HolFit</td>\n",
       "      <td>QuaFit</td>\n",
       "      <td>-157.150</td>\n",
       "      <td>-159.661</td>\n",
       "      <td>2.511</td>\n",
       "      <td>27.488</td>\n",
       "      <td>two-sided</td>\n",
       "      <td>0.091</td>\n",
       "      <td>0.900000</td>\n",
       "      <td>0.009</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "        A       B  mean(A)  mean(B)    diff      se       tail      T  \\\n",
       "0  CubFit  GenFit -135.338 -150.694  15.356  27.552  two-sided  0.557   \n",
       "1  CubFit  HolFit -135.338 -157.150  21.812  27.488  two-sided  0.794   \n",
       "2  CubFit  QuaFit -135.338 -159.661  24.324  27.520  two-sided  0.884   \n",
       "3  GenFit  HolFit -150.694 -157.150   6.456  27.520  two-sided  0.235   \n",
       "4  GenFit  QuaFit -150.694 -159.661   8.967  27.552  two-sided  0.325   \n",
       "5  HolFit  QuaFit -157.150 -159.661   2.511  27.488  two-sided  0.091   \n",
       "\n",
       "    p-tukey  hedges  \n",
       "0  0.900000   0.054  \n",
       "1  0.877933   0.077  \n",
       "2  0.858166   0.085  \n",
       "3  0.900000   0.023  \n",
       "4  0.900000   0.032  \n",
       "5  0.900000   0.009  "
      ]
     },
     "execution_count": 392,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "Modeltukey = pg.pairwise_tukey(data = analysisdata, dv = 'AIC', between=['Model'])\n",
    "Modeltukey"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 393,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Con_MovementDimensionality  2D  3D  sessile\n",
      "BestModelAIC                               \n",
      "CubFit                      26  50        0\n",
      "GenFit                       5  12        1\n",
      "HolFit                      23  37        0\n",
      "QuaFit                      11  48        1\n"
     ]
    }
   ],
   "source": [
    "\n",
    "ConDimcrosstab = pd.crosstab(graphdata['BestModelAIC'], graphdata['Con_MovementDimensionality'], margins = False)\n",
    "print(ConDimcrosstab) "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.6.9"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 1
}
