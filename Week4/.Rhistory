mm2<-lmer(Day~MaleFactAge+FemaleFactAge+Virginity+(1|Aviary)+(1|year), data=data)
summary(mm2)
mm2<-lmer(Day~MaleFactAge+FemaleFactAge+f2+Virginity+(1|Aviary)+(1|year), data=data)
f2<-FemaleFactAge*FemaleFactAge
f2<-data$FemaleFactAge*data$FemaleFactAge
mm2<-lmer(Day~MaleFactAge+FemaleFactAge+f2+Virginity+(1|Aviary)+(1|year), data=data)
summary(mm2)
f2<-data$FemaleFactAge*data$FemaleFactAge
mm2<-lmer(Day~MAge+FAge+Virginity+(1|Aviary)+(1|year), data=data)
summary(mm2)
f2<-data$FAge*data$FAge
f2<-data$FAge*data$FAge
mm2<-lmer(Day~MAge+FAge+f2+Virginity+(1|Aviary)+(1|year), data=data)
summary(mm2)
par(mfrow=c(2,1))
ModResults<-
structure(
c(0.41,-0.05,-0.09,  # posterior means
0.11,-0.10,-0.17,    # lower
0.71,-0.17,-0.01      # upper 95CI
),
.Dim= c(3L, 3L),
.Dimnames = list(
c("Age","Age squared","MomAge (daughters)"),
c("post. mean", "lower 95 CI", "upper 95CI")
)
)
require(Gmisc)
forestplot2(mean=ModResults[,"post. mean"],
lower=ModResults[,"lower 95 CI"],
upper=ModResults[,"upper 95CI"],
labeltext=rownames(ModResults),
xticks=c(-0.75,-.5, -.25, 0, 0.25,0.5,0.75), lwd.ci=3.5)
?forestplot2
forestplot2(mean=ModResults[,"post. mean"],
lower=ModResults[,"lower 95 CI"],
upper=ModResults[,"upper 95CI"],
labeltext=rownames(ModResults),
xticks=c(-0.75,-.5, -.25, 0, 0.25,0.5,0.75), lwd.ci=3.5, boxsize=NULL)
forestplot2(mean=ModResults[,"post. mean"],
lower=ModResults[,"lower 95 CI"],
upper=ModResults[,"upper 95CI"],
labeltext=rownames(ModResults),
xticks=c(-0.75,-.5, -.25, 0, 0.25,0.5,0.75), lwd.ci=3.5, boxsize=NULL)
dev.off()
forestplot2(mean=ModResults[,"post. mean"],
lower=ModResults[,"lower 95 CI"],
upper=ModResults[,"upper 95CI"],
labeltext=rownames(ModResults),
xticks=c(-0.75,-.5, -.25, 0, 0.25,0.5,0.75), lwd.ci=3.5,      boxsize=NULL)
forestplot2(mean=ModResults[,"post. mean"],
lower=ModResults[,"lower 95 CI"],
upper=ModResults[,"upper 95CI"],
labeltext=rownames(ModResults),
xticks=c(-0.75,-.5, -.25, 0, 0.25,0.5,0.75), lwd.ci=3.5,      boxsize=1)
forestplot2(mean=ModResults[,"post. mean"],
lower=ModResults[,"lower 95 CI"],
upper=ModResults[,"upper 95CI"],
labeltext=rownames(ModResults),
xticks=c(-0.75,-.5, -.25, 0, 0.25,0.5,0.75), lwd.ci=3.5,      boxsize=0.2)
forestplot2(mean=ModResults[,"post. mean"],
lower=ModResults[,"lower 95 CI"],
upper=ModResults[,"upper 95CI"],
labeltext=rownames(ModResults),
xticks=c(-0.75,-.5, -.25, 0, 0.25,0.5,0.75), lwd.ci=3.5,      boxsize=0.2)
dev.off()
forestplot2(mean=ModResults[,"post. mean"],
lower=ModResults[,"lower 95 CI"],
upper=ModResults[,"upper 95CI"],
labeltext=rownames(ModResults),
xticks=c(-0.75,-.5, -.25, 0, 0.25,0.5,0.75), lwd.ci=3.5,      boxsize=0.2)
dev.off()
forestplot2(mean=ModResults[,"post. mean"],
lower=ModResults[,"lower 95 CI"],
upper=ModResults[,"upper 95CI"],
labeltext=rownames(ModResults),
xticks=c(-0.75,-.5, -.25, 0, 0.25,0.5,0.75), lwd.ci=3.5,      boxsize=0.05)
dev.off()
forestplot2(mean=ModResults[,"post. mean"],
lower=ModResults[,"lower 95 CI"],
upper=ModResults[,"upper 95CI"],
labeltext=rownames(ModResults),
xticks=c(-0.75,-.5, -.25, 0, 0.25,0.5,0.75), lwd.ci=3.5,      boxsize=0.08)
?mfrow
?par
pdf("FigForestPlot2.pdf", height=10, width=9)
par(mfrow=c(2,1))
ModResults<-
structure(
c(0.41,-0.05,-0.09,  # posterior means
0.11,-0.10,-0.17,    # lower
0.71,-0.17,-0.01      # upper 95CI
),
.Dim= c(3L, 3L),
.Dimnames = list(
c("Age","Age squared","MomAge (daughters)"),
c("post. mean", "lower 95 CI", "upper 95CI")
)
)
require(Gmisc)
forestplot2(mean=ModResults[,"post. mean"],
lower=ModResults[,"lower 95 CI"],
upper=ModResults[,"upper 95CI"],
labeltext=rownames(ModResults),
xticks=c(-0.75,-.5, -.25, 0, 0.25,0.5,0.75), lwd.ci=3.5,      boxsize=0.08)
ModResults<-
structure(
c(0.61,-0.07,-0.12,  # posterior means
0.33,-0.12,-0.20,    # lower
0.91,-0.03,-0.05      # upper 95CI
),
.Dim= c(3L, 3L),
.Dimnames = list(
c("Age","Age squared","DadAge (sons)"),
c("post. mean", "lower 95 CI", "upper 95CI")
)
)
ModResults<-
structure(
c(0.61,-0.07,-0.12,  # posterior means
0.33,-0.12,-0.20,    # lower
0.91,-0.03,-0.05      # upper 95CI
),
.Dim= c(3L, 3L),
.Dimnames = list(
c("Age","Age squared","DadAge (sons)"),
c("post. mean", "lower 95 CI", "upper 95CI")
)
)
forestplot2(mean=ModResults[,"post. mean"],
lower=ModResults[,"lower 95 CI"],
upper=ModResults[,"upper 95CI"],
labeltext=rownames(ModResults),
xticks=c(-0.75,-.5, -.25, 0, 0.25,0.5,0.75), lwd.ci=3.5, boxsize=0.08)
dev.off()
dev.off()
pdf("FigForestPlot2.pdf", height=10, width=9)
par(mfrow=c(2,1))
ModResults<-
structure(
c(0.41,-0.05,-0.09,  # posterior means
0.11,-0.10,-0.17,    # lower
0.71,-0.17,-0.01      # upper 95CI
),
.Dim= c(3L, 3L),
.Dimnames = list(
c("Age","Age squared","MomAge (daughters)"),
c("post. mean", "lower 95 CI", "upper 95CI")
)
)
require(Gmisc)
forestplot2(mean=ModResults[,"post. mean"],
lower=ModResults[,"lower 95 CI"],
upper=ModResults[,"upper 95CI"],
labeltext=rownames(ModResults),
xticks=c(-0.75,-.5, -.25, 0, 0.25,0.5,0.75), lwd.ci=3.5,      boxsize=0.08)
ModResults<-
structure(
c(0.61,-0.07,-0.12,  # posterior means
0.33,-0.12,-0.20,    # lower
0.91,-0.03,-0.05      # upper 95CI
),
.Dim= c(3L, 3L),
.Dimnames = list(
c("Age","Age squared","DadAge (sons)"),
c("post. mean", "lower 95 CI", "upper 95CI")
)
)
forestplot2(mean=ModResults[,"post. mean"],
lower=ModResults[,"lower 95 CI"],
upper=ModResults[,"upper 95CI"],
labeltext=rownames(ModResults),
xticks=c(-0.75,-.5, -.25, 0, 0.25,0.5,0.75), lwd.ci=3.5, boxsize=0.08)
dev.off()
getwd()
pdf("FigForestPlotFemales.pdf", height=5, width=4)
ModResults<-
structure(
c(0.41,-0.05,-0.09,  # posterior means
0.11,-0.10,-0.17,    # lower
0.71,-0.17,-0.01      # upper 95CI
),
.Dim= c(3L, 3L),
.Dimnames = list(
c("Age","Age squared","MomAge (daughters)"),
c("post. mean", "lower 95 CI", "upper 95CI")
)
)
require(Gmisc)
forestplot2(mean=ModResults[,"post. mean"],
lower=ModResults[,"lower 95 CI"],
upper=ModResults[,"upper 95CI"],
labeltext=rownames(ModResults),
xticks=c(-0.75,-.5, -.25, 0, 0.25,0.5,0.75), lwd.ci=3.5,      boxsize=0.08)
dev.off()
pdf("FigForestPlotMales.pdf", height=5, width=4)
ModResults<-
structure(
c(0.61,-0.07,-0.12,  # posterior means
0.33,-0.12,-0.20,    # lower
0.91,-0.03,-0.05      # upper 95CI
),
.Dim= c(3L, 3L),
.Dimnames = list(
c("Age","Age squared","DadAge (sons)"),
c("post. mean", "lower 95 CI", "upper 95CI")
)
)
forestplot2(mean=ModResults[,"post. mean"],
lower=ModResults[,"lower 95 CI"],
upper=ModResults[,"upper 95CI"],
labeltext=rownames(ModResults),
xticks=c(-0.75,-.5, -.25, 0, 0.25,0.5,0.75), lwd.ci=3.5, boxsize=0.08)
dev.off()
citation()
a<-c(range(1,100))
a
a<-c(1:100)
b<-2^a
plot(a,b)
a<-c(1:30)
b<-2^a
plot(a,b)
a<-c(1:25)
b<-2^a
plot(a,b)
a<-c(1:22)
b<-2^a
plot(a,b)
a<-c(1:20)
b<-2^a
plot(a,b)
2^20
install.packages("Rcapture")
library(Rcapture)
data("hare")
head(hare)
desc<-descriptive(hare)
plot(desc)
plot(desc)
closedp(hare)
closedp(hare)
data("bunting")
descriptive(bunting)
descriptive(bunting, dfreq=T)
m<-openp(bunting, dfreq=T)
op.m1$model.fit[1, ]
m$model.fit[1, ]
summary(m)
plot()
plot(m)
tab<-data.frame(m$survivals, rep("|",7), m$survivals)
m$survivals
update()
update(R)
for (j in seq(1,length(p))) {
#randomization
Nbroods<-ceiling(rnorm(1000,2.2,0.9))
Nbroodsx<-Nbroods
# simulates broods per annum, usually 2, but up to 6
for (i in seq (1,length(Nbroods))) {
if (Nbroodsx[i]<0) {
Nbroodsx[i]<-0
}
}
# make sure all negatives are zeros
for (i in seq (1,length(Nbroods))) {
if (Nbroodsx[i]>5) {
Nbroodsx[i]<-5
}
}
# make sure everythign above 5 goes down to 6 for Epp calculation, use x vector for that
Epp<-rbinom(length(Nbroods),1,0.19*Nbroodsx)
t<-t.test(Nbroods~Epp)
#but use original vector to calculate t.test
p[j]<-t$p.value
}
p<-rep(1,10000)
a<-c(1:4)
a
b<-c(9:12)
t.test(a~b)
t.test(a,b)
a<-c(1:10)
b<-c(9:19)
t.test(a,b)
length(a)
length(b)
p<-rep(1,10000)
prom<-rep(1,10000) # binomial promiscuity vector
for (j in seq(1,length(p))) {    # every male p get a number of broods assigned for this year
#randomization
Nbroods<-ceiling(rnorm(1000,2.2,0.9))
Nbroodsx<-Nbroods
# simulates broods per annum, usually 2, but up to 6
for (i in seq (1,length(Nbroods))) {
if (Nbroodsx[i]<0) {
Nbroodsx[i]<-0
}
}
# make sure all negatives are zeros
for (i in seq (1,length(Nbroods))) {
if (Nbroodsx[i]>5) {
Nbroodsx[i]<-5
}
}
# make sure everythign above 5 goes down to 6 for Epp calculation, use x vector for that
Epp<-rbinom(length(Nbroods),1,0.19*Nbroodsx)  # every male gets promiscuity assigned 0.19 probability a brood having epp, thus times broods
t<-t.test(Nbroods~Epp)                        # test if NBroods is linked to number EPP
#but use original vector to calculate t.test
p[j]<-t$p.value
}
psort<-sort(p)
max(p)
head(Nbroods)
head(Epp)
sample(3,5,1)
?sample
sample(3:5,1)
sample(3:5,1)
sample(3:5,1)
sample(3:5,1)
sample(3:5,1)
for (j in seq(1,length(p))) {    # every male p get a number of broods assigned for this year
#randomization
Nbroods<-ceiling(rnorm(1000,2.2,0.9))
Nbroodsx<-Nbroods
# simulates broods per annum, usually 2, but up to 6
for (i in seq (1,length(Nbroods))) {
if (Nbroodsx[i]<0) {
Nbroodsx[i]<-0
}
}
# make sure all negatives are zeros
for (i in seq (1,length(Nbroods))) {
if (Nbroodsx[i]>5) {
Nbroodsx[i]<-5
}
}
# make sure everything above 5 goes down to 6 for Epp calculation, use x vector for that
for (i in seq (1,length(p))) {
p[i]<-Nbroods[i]*sample(3:5,1)
}
# calculate N chicks (p)
# calculate N EP chicks (ep)
# t<-t.test(Nbroods~Epp)                        # test if NBroods is linked to number EPP
#but use original vector to calculate t.test
#p[j]<-t$p.value
}
head(p)
e<-p
head(e)
max(e)
max(e)tail(e)
tail(e)
e
hist(e)
x<-rpois(10, 4)
x
?rpois
x<-rpois(10, 10)
?rpois
?rpois
x
x<-rpois(10, 2)
x
x<-rpois(100, 10)
hist(x)
?rpois
x<-rpois(100, 10, lower.tail=FALSE)
x<-qpois(100, 10)
x<-rpois(100, 10, lower.tail=FALSE)
x<-qpois(100, 10, lower.tail=FALSE)
x
x<-qpois(100, 11)
x<-rpois(100, 11)
hist(x)
for (j in seq(1,length(p))) {    # every male p get a number of chicks assigned for this year
#randomization
NChicks<-rpois(10000, 11)
}
e<-p
for (i in seq (1,length(p))) {
b<-0
for (j in seq(1, NChicks[i])){
if (runif(1)<0.18) {
b<-b+1
}
}
e[i]<-b
}
plot(p,e)
cor.test(p,e)
year<-c(2000:2015)
year
broods<-c(58,58,93,134,216,247,133,98,30,62,69,153,98,180,258,122)
hist(broods)
plot(broods~year)
barplot(broods~year)
barplot(broods,year)
mean(broods)
var(broods)
sd(broods)
max(broods)
min(broods)
median(broods)
install.packages("geneticsped")
install.packages("GeneticsPed")
install.packages("FamAgg")
install.packages("Bioconductor")
source("https://bioconductor.org/biocLite.R")
biocLite()
x<-c(3,1,4,8,2)
y<-c(5,3,6,10,4)
y<-c(5,4,6,9,3)
plot(x,y)
y<-c(5,4,7,9,3)
plot(x,y)
plot(x,y, pch=19, col-"red")
plot(x,y, pch=19, col-red)
plot(x,y, pch=19, col="red")
plot(x,y, pch=19, col="red" ylim=c(0,9))
plot(x,y, pch=19, col="red", ylim=c(0,9))
plot(x,y, pch=19, col="red", ylim=c(0,9), xlim=c(0,8))
abline(v = 0, lty = "dotted")
abline(v = 1, lty = "dotted")
abline(v = 2, lty = "dotted")
abline(v = 3, lty = "dotted")
abline(v = 4, lty = "dotted")
abline(v = 5, lty = "dotted")
abline(v = 6, lty = "dotted")
abline(v = 7, lty = "dotted")
abline(v = 8, lty = "dotted")
abline(v = 9, lty = "dotted")
abline(h = 9, lty = "dotted")
abline(h = 8, lty = "dotted")
abline(h = 7, lty = "dotted")
abline(h = 6, lty = "dotted")
abline(h = 5, lty = "dotted")
abline(h = 4, lty = "dotted")
abline(h = 3, lty = "dotted")
abline(h = 2, lty = "dotted")
abline(h = 1, lty = "dotted")
abline(h = 0, lty = "dotted")
var(c(1,2,3,4,8))
cov(c(1,2,3,4,8),c(4,3,5,7,9))
6.05/7.3
x<-var(c(1,2,3,4,8))
y<-c(4,3,5,7,9)
summary(lm(y~x))
x
x<-(1,2,3,4,8)
x<-c(1,2,3,4,8)
summary(lm(y~x))
var(x)
cov(x,y)
anova(lm(y~x))
plot(y~x)
plot(model1)
model1<-(lm(y~x))
plot(model1)
model1
res(model1)
resid(model1)
x<-c(1,2,3,4,8)
y<c(4,3,5,7,9)
model1 <- (lm(y~x))
model1
summary(model1)
anova(model1)
resid(model1)
cov(x,y)
var(x)
plot(y~x)
rm(list=ls())
setwd("~/Box Sync/Teaching/IntroStats/AllStuff")
setwd("~/Box Sync/Teaching/IntroStats")
setwd("~/Box Sync/Teaching/IntroStats/HandOutsandData'16")
d<-read.table("SparrowSize.txt", header=TRUE)
d1<-subset(d, d$Wing!="NA") #subset without NAs
model3<-lm(Wing~as.factor(BirdID), data=d1) #wing weight vs birdID
anova(model3)
require(dplyr)
d1 %>%
group_by(BirdID) %>%
summarise (count=length(BirdID))
d1 %>%
group_by(BirdID) %>%
summarise (count=length(BirdID)) %>%
summarise(length(BirdID))
d1 %>%
group_by(BirdID) %>%
summarise(count=length(BirdID)) %>%
summarise (sum(count))
d1 %>%
group_by(BirdID) %>%
summarise(count=length(BirdID)) %>%
summarise (sum(count^2))
d1 %>%
group_by(BirdID) %>%
summarise(count=length(BirdID)) %>%
summarise (sum(count^2))
#gives numerator
7307/1695
1695-(7307/1695)
(1/617)*(1695-(7307/1695))
model3<-lm(Wing~as.factor(BirdID), data=d1)
anova(model3)
((13.20-1.62)/2.74)/(1.62+(13.2-1.62)/2.74)
0.723*100
m1<-lm(Bill~Tarsus, data=d)
summary(m1)
